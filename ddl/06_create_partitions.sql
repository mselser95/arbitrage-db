-- -- Drop the existing tables before creating partitions
-- DROP TABLE IF EXISTS arbitrage_schema.erc20_tokens CASCADE;
-- DROP TABLE IF EXISTS arbitrage_schema.markets CASCADE;
--
-- -- Create the ERC20 tokens table with partitioning by chain_id
-- CREATE TABLE arbitrage_schema.erc20_tokens (
--                                                id VARCHAR(42) PRIMARY KEY,
--                                                discovery_block BIGINT NOT NULL,
--                                                name VARCHAR(255) NOT NULL,
--                                                decimals INTEGER NOT NULL,
--                                                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--                                                chain_id BIGINT NOT NULL
-- ) PARTITION BY RANGE (chain_id);
--
-- -- Define partitions for the ERC20 tokens table
-- CREATE TABLE arbitrage_schema.erc20_tokens_chain_1 PARTITION OF arbitrage_schema.erc20_tokens
--     FOR VALUES FROM (1) TO (2);
--
-- CREATE TABLE arbitrage_schema.erc20_tokens_chain_2 PARTITION OF arbitrage_schema.erc20_tokens
--     FOR VALUES FROM (2) TO (3);
--
-- -- Create the markets table with partitioning by provider
-- CREATE TABLE arbitrage_schema.markets (
--                                           id VARCHAR(100) PRIMARY KEY,
--                                           provider BIGINT NOT NULL,
--                                           input_token VARCHAR(42) REFERENCES arbitrage_schema.erc20_tokens(id),
--                                           output_token VARCHAR(42) REFERENCES arbitrage_schema.erc20_tokens(id),
--                                           pool_fee BIGINT,
--                                           pool_identifier VARCHAR(40),
--                                           is_stable BOOLEAN NOT NULL
-- ) PARTITION BY LIST (provider);
--
-- -- Define partitions for the markets table
-- CREATE TABLE arbitrage_schema.markets_provider_1 PARTITION OF arbitrage_schema.markets
--     FOR VALUES IN (1);
--
-- CREATE TABLE arbitrage_schema.markets_provider_2 PARTITION OF arbitrage_schema.markets
--     FOR VALUES IN (2);
